/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import clases.*;
import controlador.LeerEscribirArchivos;
import java.util.*;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import modelo.Usuario;

/**
 *
 * @author USRBET
 */
public class Alumno extends javax.swing.JFrame {
    LeerEscribirArchivos leeryEscribirarchivos = new LeerEscribirArchivos();
    List <Usuario> listamatriculados = new ArrayList<>();
    HashMap<Object, Object> hashmap = new HashMap<>();
    
   
    public Alumno(String nombreyApellido) {
        initComponents();
       labelnombre.setText(nombreyApellido);
       setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelnombre = new javax.swing.JLabel();
        bmatricularse = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlistmaterias = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlisthorarios = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        itemdemenu = new javax.swing.JMenuBar();
        cargar = new javax.swing.JMenu();
        selecmateria = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        selechorario = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelnombre.setText("txtusuario");

        bmatricularse.setText("Matricularse");
        bmatricularse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmatricularseActionPerformed(evt);
            }
        });

        jlistmaterias.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jlistmaterias);

        jlisthorarios.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jlisthorarios);

        jLabel1.setText("Materias");

        jLabel2.setText("Horarios");

        cargar.setText("Cargar");
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });

        selecmateria.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        selecmateria.setText("Materias");
        selecmateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecmateriaActionPerformed(evt);
            }
        });
        cargar.add(selecmateria);
        cargar.add(jSeparator1);

        selechorario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        selechorario.setText("Horarios");
        selechorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selechorarioActionPerformed(evt);
            }
        });
        cargar.add(selechorario);

        itemdemenu.add(cargar);

        setJMenuBar(itemdemenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bmatricularse)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(107, 107, 107))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bmatricularse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selecmateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecmateriaActionPerformed
         List <Materia> listmateria = (List <Materia>) leeryEscribirarchivos.leerArchivo("listaMateria");
         actualizarListas (listmateria, jlistmaterias);
    }//GEN-LAST:event_selecmateriaActionPerformed
   
    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargarActionPerformed

    private void selechorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selechorarioActionPerformed
        List <Horario> listahorarios =(List <Horario>) leeryEscribirarchivos.leerArchivo("listaHorarios");
        actualizarListas (listahorarios, jlisthorarios);
     
    }//GEN-LAST:event_selechorarioActionPerformed

    private void bmatricularseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmatricularseActionPerformed
        List <Materia> listaMateria = (List <Materia>) leeryEscribirarchivos.leerArchivo("listaMateria");
        Materia materiaMatricula = (Materia) jlistmaterias.getSelectedValue();
        
        List <Usuario>  listauser = (List <Usuario>) leeryEscribirarchivos.leerArchivo("listaUsuarios");
        for(int i=0; i<= listauser.size();i++){
            Usuario user = listauser.get(i);
            if(user.getNombreApellido().equals(labelnombre.getText())){
                if(hashmap.get(materiaMatricula.getCodigo()) == null){
                   listamatriculados.add(user);
                   hashmap.put(materiaMatricula.getCodigo(),listamatriculados);
                   leeryEscribirarchivos.escribirarchivo(hashmap,"archivoHashMap");
                JOptionPane.showMessageDialog(null,"Materia Registrada con Exito");
                } else {
                    listamatriculados = (List<Usuario>) hashmap.get(materiaMatricula.getCodigo());
                    listamatriculados.add(user);
                    hashmap.put(materiaMatricula.getCodigo(),listamatriculados);
                    leeryEscribirarchivos.escribirarchivo(hashmap,"archivoHashMap");
                JOptionPane.showMessageDialog(null,"Materia Registrada con Exito");
                }
            } else{
                JOptionPane.showMessageDialog(null,"Usuarios No Coinciden");
            }
        }
                 
    }//GEN-LAST:event_bmatricularseActionPerformed
 public void actualizarListas (List lista, JList listaVista){
        DefaultListModel model = new DefaultListModel();  // index es la posicion en la que quiero guardar
        for (int i = 0; i < lista.size(); i++) {
            model.addElement(lista.get(i));
        }
        
        listaVista.setModel(model);
        listaVista.revalidate();
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alumno("Estudiante").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bmatricularse;
    private javax.swing.JMenu cargar;
    private javax.swing.JMenuBar itemdemenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JList jlisthorarios;
    private javax.swing.JList jlistmaterias;
    private javax.swing.JLabel labelnombre;
    private javax.swing.JMenuItem selechorario;
    private javax.swing.JMenuItem selecmateria;
    // End of variables declaration//GEN-END:variables

}

//subir el codigo hasta lo de hoy
