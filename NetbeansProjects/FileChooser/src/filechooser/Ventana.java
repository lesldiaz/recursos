/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filechooser;

import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import static javax.imageio.ImageIO.read;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author USRBET
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
//        file.setCurrentDirectory(new File("/src/.....")); //fijar la ruta si se quiere apuntar al proyecto, esta linea no va si quiero que apunte a la ruta mis documentos por defecto
        // filtro de busqueda de imagenes
        this.setExtendedState(MAXIMIZED_BOTH); //Maximiza la pantalla
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Solo archivos JPG","jpg","png","gif"); // puedo poner todas las extensiones que queramos
        file.setFileFilter(filtro);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        file = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        int aux = file.showOpenDialog(null); // 0 es seleccionado un archivo
        //System.out.println(aux);
        if (aux == 0){ // solo si selecciona un archivo se abre/ejecuta la accion siguiente 
            File f = file.getSelectedFile();
            System.out.println(f.getName());
            System.out.println(f.getAbsolutePath());
            
            try {
                BufferedImage image =  ImageIO.read(f); // LEE el archivo elegido del file chooser
//            Files.copy(null,"archivo de salida" ) // se pase el path  y sireve para leer el archivo y conforme lee lo copia a otro lado solo copia archivos
                copiarImg(image,f.getName());
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_formMousePressed

    
    public void copiarImg(BufferedImage bimage,String nombrecopia) { // buffered imagen es un almacenamiento de algo se guarda en un espacio de memoria buffer contenedor peque√±o donde puedo almacenar cosas
        // ctrl + c
        ColorModel cm = bimage.getColorModel();
        //OBTENGO el color de la imagen, esa imagen tiene datos: pixel RGB : 0 a 255 a cada pizel, obtenemos todo el modelo de ese pixel obtengo todo el modelo rgb
        boolean alpha = cm.isAlphaPremultiplied(); //es un boolean y nos indica si la imagen es editada, nos sirve para mantener la edicion de la imagen
        WritableRaster raster = bimage.copyData(null); /// obtener los DATOS escritos sobre la imagen
        //arcivo de copia ctrl + v
        BufferedImage copia = new BufferedImage(cm,raster, alpha, null);
        // buscar la ruta de la imagen, ruta para guardar
        File guardarimagen = new File("c:/", nombrecopia);//nombrecopia es el nombre de la misma imagen
        try {
            ImageIO.write(copia,"jpg", guardarimagen);
        } catch (IOException ex) { // no se pueda leer escribir, imagen protegida, no encuetra direccion
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    // objetostring.lastIntexof('.') recupera el el ultimo punto de la cadena
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser file;
    // End of variables declaration//GEN-END:variables
}
